name: Build and release

on:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15.8

      - name: Build
        run: |
          go version

          export GOBIN=$(go env GOPATH)/bin
          export PATH=$PATH:$GOBIN
          go get -v | true

          go get github.com/mitchellh/gox
          gox \
            -arch=amd64 \
            -os="darwin linux windows" \
            -ldflags="-X 'main.BuildVersion=${GITHUB_REF##*/}'" \
            -output="dist/tpl-{{.OS}}-{{.Arch}}"
          gox \
            -arch=386 \
            -os="linux windows" \
            -ldflags="-X 'main.BuildVersion=${GITHUB_REF##*/}'" \
            -output="dist/tpl-{{.OS}}-{{.Arch}}"

      - name: Run vet & lint
        run: |
          go get -u golang.org/x/lint/golint
          go vet .
          golint .

      - name: Test
        run: |
          export foo="bar"
          export bar="[foo,bar]"
          export foobar="{foo:bar,bar:foo}"
          export foobaz="{foo:[bar,baz]}"
          export baz="1.0-123"
          export number="59614658972"
          export null="null"
          export empty=
          export money="500â‚¬"
          export special="?&>=:/"
          export woot="[]"
          export whoa="{}"
          export backslash="\.\/"
          export urls="{google:[https:://google.com,http:://google.de],github:https:://github.com}"

          go run tpl.go -t test/test.tpl | diff - test/test.txt

      - name: Test version string
        run: |
          go run -ldflags="-X 'main.BuildVersion=${GITHUB_REF##*/}'" tpl.go -v | grep "${GITHUB_REF##*/}"

      - name: Calculate checksums
        run: |
          cd dist
          sha512sum tpl-* > sha512sums.txt

      - uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: dist/*

  release:
    runs-on: ubuntu-latest
    needs:
      - build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v0.4.4
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/download-artifact@v2
        with:
          name: binaries
          path: dist

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Upload multiple assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -x
          assets=()
          for asset in dist/*; do
            assets+=("-a" "$asset")
          done
          hub release edit "${assets[@]}" -m "" "${GITHUB_REF##*/}"

      # - name: Upload release assets
      #   id: upload-release-asset
      #   # uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: dist/sha512sums
      #     asset_name: sha512sums
      #     asset_content_type: application/zip
